{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Soude\\\\OneDrive - Syracuse University\\\\Research\\\\Souder Group\\\\SBS\\\\Website\\\\test-app\\\\my-react-app\\\\src\\\\components\\\\AnalyzeMollerRun.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnalyzeMollerRun = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [status, setStatus] = useState('');\n  const handleAnalyze = async () => {\n    setStatus('');\n    if (!inputValue || isNaN(inputValue)) {\n      setStatus('Please enter a valid integer.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:8000/api/analyze_run/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          run_number: parseInt(inputValue, 10)\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setStatus('Analysis started successfully.');\n      } else {\n        setStatus(data.error || 'Error starting analysis.');\n      }\n    } catch (error) {\n      setStatus('Network error.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value),\n      placeholder: \"Enter an integer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAnalyze,\n      children: \"Analyze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), status && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(AnalyzeMollerRun, \"zazcsC6WdeNZKNjY2/ZhV9VW6QY=\");\n_c = AnalyzeMollerRun;\nexport default AnalyzeMollerRun;\nvar _c;\n$RefreshReg$(_c, \"AnalyzeMollerRun\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AnalyzeMollerRun","_s","inputValue","setInputValue","status","setStatus","handleAnalyze","isNaN","response","fetch","method","headers","body","JSON","stringify","run_number","parseInt","data","json","ok","error","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Soude/OneDrive - Syracuse University/Research/Souder Group/SBS/Website/test-app/my-react-app/src/components/AnalyzeMollerRun.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst AnalyzeMollerRun = () => {\n    const [inputValue, setInputValue] = useState('');\n    const [status, setStatus] = useState('');\n\n    const handleAnalyze = async () => {\n        setStatus('');\n        if (!inputValue || isNaN(inputValue)) {\n            setStatus('Please enter a valid integer.');\n            return;\n        }\n        try {\n            const response = await fetch('http://localhost:8000/api/analyze_run/', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ run_number: parseInt(inputValue, 10) }),\n            });\n            const data = await response.json();\n            if (response.ok) {\n                setStatus('Analysis started successfully.');\n            } else {\n                setStatus(data.error || 'Error starting analysis.');\n            }\n        } catch (error) {\n            setStatus('Network error.');\n        }\n    };\n\n    return (\n        <div>\n            <input \n                type=\"number\" \n                value={inputValue} \n                onChange={(e) => setInputValue(e.target.value)} \n                placeholder=\"Enter an integer\" \n            />\n            <button onClick={handleAnalyze}>Analyze</button>\n            {status && <div>{status}</div>}\n        </div>\n    );\n};\n\nexport default AnalyzeMollerRun;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9BD,SAAS,CAAC,EAAE,CAAC;IACb,IAAI,CAACH,UAAU,IAAIK,KAAK,CAACL,UAAU,CAAC,EAAE;MAClCG,SAAS,CAAC,+BAA+B,CAAC;MAC1C;IACJ;IACA,IAAI;MACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACnEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,UAAU,EAAEC,QAAQ,CAACd,UAAU,EAAE,EAAE;QAAE,CAAC;MACjE,CAAC,CAAC;MACF,MAAMe,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClC,IAAIV,QAAQ,CAACW,EAAE,EAAE;QACbd,SAAS,CAAC,gCAAgC,CAAC;MAC/C,CAAC,MAAM;QACHA,SAAS,CAACY,IAAI,CAACG,KAAK,IAAI,0BAA0B,CAAC;MACvD;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZf,SAAS,CAAC,gBAAgB,CAAC;IAC/B;EACJ,CAAC;EAED,oBACIN,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MACIuB,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAErB,UAAW;MAClBsB,QAAQ,EAAGC,CAAC,IAAKtB,aAAa,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,WAAW,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACFhC,OAAA;MAAQiC,OAAO,EAAE1B,aAAc;MAAAe,QAAA,EAAC;IAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC/C3B,MAAM,iBAAIL,OAAA;MAAAsB,QAAA,EAAMjB;IAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEd,CAAC;AAAC9B,EAAA,CAvCID,gBAAgB;AAAAiC,EAAA,GAAhBjC,gBAAgB;AAyCtB,eAAeA,gBAAgB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}